[gd_scene load_steps=6 format=3 uid="uid://cydoqyj3fxncn"]

[ext_resource type="Script" path="res://scripts/viewportmesh.gd" id="1_tou20"]

[sub_resource type="Shader" id="Shader_pq18n"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform float point_size : hint_range(0, 128);
uniform float roughness : hint_range(0, 1);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
    UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
    vec2 base_uv = SCREEN_UV;  // Use SCREEN_UV instead of UV
    vec4 albedo_tex = texture(texture_albedo, base_uv);
    ALBEDO = albedo.rgb * albedo_tex.rgb;
    float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
    METALLIC = metallic_tex * metallic;
    vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
    float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
    ROUGHNESS = roughness_tex * roughness;
    SPECULAR = specular;
}
"

[sub_resource type="ViewportTexture" id="ViewportTexture_sj70a"]
viewport_path = NodePath("SubViewport")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ojqr3"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_pq18n")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("ViewportTexture_sj70a")

[sub_resource type="QuadMesh" id="QuadMesh_kc5ts"]

[node name="Portal" type="Node3D"]

[node name="SubViewport" type="SubViewport" parent="."]
size = Vector2i(1024, 1024)
render_target_update_mode = 4

[node name="Camera3D" type="Camera3D" parent="SubViewport"]
current = true

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)
material_override = SubResource("ShaderMaterial_ojqr3")
mesh = SubResource("QuadMesh_kc5ts")
script = ExtResource("1_tou20")
